//分别用迭代法和递归法编写求菲波拉契数列前N项的函数

#include <stdio.h>
#include <time.h>   //clock 

#define N 40

long f1(int n) { //用迭代法实现
  if (n<=0) return 0;
  if (n==1 || n==2) return 1;
  long a1=1,a2=1,a3;
  for (int i=3;i<=n;i++) {
    a3=a1+a2;
    a1=a2;
    a2=a3;
  }
  return a3;
}

long f2(int n) {//用递归法实现
  if (n<=0) return 0;
  if (n==1 || n==2) return 1;
  else return f2(n-1)+f2(n-2);
}

void main() { 
  clock_t t=clock(); //记下程序运行前的时间
  for (int i=1;i<=N;i++) 
    printf("%d\t",f1(i));
  printf("\n程序运行时间%lf秒。\n",double(clock()-t)/CLOCKS_PER_SEC);
  
  t=clock(); //记下程序运行前的时间
  for (i=1;i<=N;i++) 
    printf("%d\t",f2(i));
  printf("\n程序运行时间%lf秒。\n",double(clock()-t)/CLOCKS_PER_SEC);
}

/*************************************************************************************
程序输出结果如下：

1       1       2       3       5       8       13      21      34      55
89      144     233     377     610     987     1597    2584    4181    6765
10946   17711   28657   46368   75025   121393  196418  317811  514229  832040
1346269 2178309 3524578 5702887 9227465 14930352        24157817        39088169
        63245986        102334155
程序运行时间0.015000秒。
1       1       2       3       5       8       13      21      34      55
89      144     233     377     610     987     1597    2584    4181    6765
10946   17711   28657   46368   75025   121393  196418  317811  514229  832040
1346269 2178309 3524578 5702887 9227465 14930352        24157817        39088169
        63245986        102334155
程序运行时间8.986000秒。
**************************************************************************************/